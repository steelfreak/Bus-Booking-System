Using Bootstrap to style your login form can make it look modern and responsive with minimal effort. Below, I'll guide you through integrating Bootstrap into your Django project to create a stylish login form.

### 1. Define Your Django Form

First, define the form in `forms.py` as usual:

```python
# myapp/forms.py
from django import forms
from django.contrib.auth.forms import AuthenticationForm

class CustomLoginForm(AuthenticationForm):
    username = forms.CharField(widget=forms.TextInput(attrs={
        'class': 'form-control',
        'placeholder': 'Username',
        'autofocus': 'autofocus',
    }))
    password = forms.CharField(widget=forms.PasswordInput(attrs={
        'class': 'form-control',
        'placeholder': 'Password',
    }))
```

### 2. Create a View

Set up a view to handle the login:

```python
# myapp/views.py
from django.shortcuts import render, redirect
from django.contrib.auth import authenticate, login as auth_login
from .forms import CustomLoginForm

def login_view(request):
    form = CustomLoginForm(request=request, data=request.POST or None)
    if request.method == 'POST' and form.is_valid():
        user = form.get_user()
        auth_login(request, user)
        return redirect('home')  # Redirect to the home page or any other page
    return render(request, 'login.html', {'form': form})
```

### 3. Define URL Patterns

Add a URL pattern for your login view:

```python
# myapp/urls.py
from django.urls import path
from .views import login_view

urlpatterns = [
    path('login/', login_view, name='login'),
]
```

### 4. Create the HTML Template

Design the login page using Bootstrap components in `login.html`. Make sure to include Bootstrap's CSS and JS:

```html
<!-- templates/login.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <!-- Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="{% static 'css/styles.css' %}">
</head>
<body>
    <div class="container">
        <div class="row justify-content-center align-items-center vh-100">
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h2 class="card-title text-center">Login</h2>
                        <form method="post" action="{% url 'login' %}">
                            {% csrf_token %}
                            <div class="form-group">
                                {{ form.username.label_tag(class="form-label") }}
                                {{ form.username }}
                            </div>
                            <div class="form-group">
                                {{ form.password.label_tag(class="form-label") }}
                                {{ form.password }}
                            </div>
                            <button type="submit" class="btn btn-primary btn-block">Log in</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS and dependencies -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>
```

### 5. Add Optional Custom CSS

You can also add custom styles in `styles.css` to tweak the appearance:

```css
/* static/css/styles.css */
body {
    background-color: #f8f9fa;
}

.card {
    border-radius: 8px;
}

.card-body {
    padding: 2rem;
}

.btn-block {
    font-size: 1.1rem;
}
```

### 6. Update Django Settings

Ensure your settings are configured to serve static files:

```python
# settings.py
STATIC_URL = '/static/'
```

### Summary

- **`forms.py`**: Customize the default Django form with Bootstrap classes.
- **`views.py`**: Handle form submission and authentication.
- **`urls.py`**: Map the URL to the login view.
- **`login.html`**: Use Bootstrap for styling the form.
- **`styles.css`**: Optional custom styles for additional tweaks.

This setup provides a modern, responsive login form using Bootstrap. You can easily extend or customize it according to your project needs. If you need more advanced features or further customization, just let me know!